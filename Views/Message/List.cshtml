@model List<LetThereBeVoice.Models.Message>
@{
    var channel = ViewBag.Channel as LetThereBeVoice.Models.Channel;
    ViewData["Title"] = $"{channel.ChannelName} - Messages";
}

<div class="app-container">
    <div class="server-list">
        <!-- Server list will be populated by the layout -->
    </div>

    <div class="channel-sidebar">
        <div class="channel-header">
            <span>@channel.Server.ServerName</span>
        </div>
        
        <div class="channel-list">
            <div class="voice-channel-section">
                <div class="voice-channel-header">
                    <span>🎙 Voice Channel</span>
                </div>
                <ul class="voice-users-list">
                    @foreach (var user in ViewBag.VoiceUsers as List<LetThereBeVoice.Models.User>)
                    {
                        <li class="voice-user-item">@user.Username</li>
                    }
                </ul>

                <div class="d-flex gap-2 flex-wrap">
                    <form method="get" action="/Voice/Join" class="mb-2">
                        <input type="hidden" name="channelId" value="@channel.ChannelID" />
                        <button type="submit" class="btn btn-primary">Join Voice</button>
                    </form>
                    <form method="get" action="/Voice/Leave">
                        <input type="hidden" name="channelId" value="@channel.ChannelID" />
                        <button type="submit" class="btn btn-secondary">Leave Voice</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div class="content-area">
        <div class="content-header">
            <span># @channel.ChannelName</span>
        </div>

        <div class="messages-container">
            @if (Model != null && Model.Any())
            {
                @foreach (var msg in Model)
                {
                    <div class="message">
                        <div class="message-avatar">
                            @msg.Sender.Username.Substring(0, 1).ToUpper()
                        </div>
                        <div class="message-content">
                            <div class="message-header">
                                <span class="message-username">@msg.Sender.Username</span>
                                <span class="message-time">@msg.SentAt.ToLocalTime().ToString("MMM dd, HH:mm")</span>
                            </div>
                            <div class="message-text">@msg.Content</div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="text-center text-secondary mt-4">
                    <p>No messages yet in this channel. Be the first to start a conversation!</p>
                </div>
            }
        </div>

        <div class="input-area">
            <form method="post" action="/Message/Send" class="message-input-container">
                <input type="hidden" name="channelId" value="@channel.ChannelID" />
                <input type="text" name="content" class="message-input" placeholder="Message #@channel.ChannelName" required autocomplete="off" />
                <button type="submit" class="btn btn-primary">Send</button>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Scroll to bottom of messages container on load
        document.addEventListener('DOMContentLoaded', function() {
            var messagesContainer = document.querySelector('.messages-container');
            if (messagesContainer) {
                messagesContainer.scrollTop = messagesContainer.scrollHeight;
            }
        });
    </script>
}
